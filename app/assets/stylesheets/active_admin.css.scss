// SASS variable overrides must be declared before loading up Active Admin's styles.
//
// To view the variables that Active Admin provides, take a look at
// `app/assets/stylesheets/active_admin/mixins/_variables.css.scss` in the
// Active Admin source.
//
// For example, to change the sidebar width:
// $sidebar-width: 242px;

// Active Admin's got SASS!
@import "active_admin/mixins";
@import "active_admin/base";

// Overriding any non-variable SASS must be done after the fact.
// For example, to change the default status-tag color:
//
//   body.active_admin {
//      .status_tag { background: #6090DB; }
//   }
//
// Notice that Active Admin CSS rules are nested within a
// 'body.active_admin' selector to prevent conflicts with
// other pages in the app. It is best to wrap your changes in a 
// namespace so they are properly recognized. You have options
// if you e.g. want different styles for different namespaces:
//
// .active_admin       applies to any Active Admin namespace
// .admin_namespace    applies to the admin namespace (eg: /admin)
// .other_namespace    applies to a custom namespace named other (eg: /other)

//= require bootstrap

#rooms {
  min-width: 200px;
}

#photo_panel { overflow:auto; }

.thumb-image {
  height: 156px;
  width: 156px;
  margin: 10px !important;
  display: inline-block;
  border: 1px solid #E4E4E4;
  float: left;
  position: relative;
}

a.delete { 
  display: none;
  position:absolute;
  top: 5px;
  right: 5px;
  width: 14px;
  height: 14px;
  text-indent: -999px;
  color: red;
  background-image: url("/assets/glyphicons-halflings.png");
  background-position: -312px 0;
}

.thumb-image:hover {
  opacity: 0.8;

  a.delete { 
    display:block;
  }
} 

.room{
  .categories {
    overflow: hidden;

    .product {
      .remove_from_room {
        display: none;
      }

      .product_label:hover {
        .remove_from_room {
          display: block;
        }
      }

      .thumb-image:hover {
        opacity: 0.4;
      }
    }
  } 
}